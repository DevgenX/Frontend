{"ast":null,"code":"var _jsxFileName = \"/Users/bstignzales/Project-Phase-4/client/src/components/Posts/Posts.jsx\",\n  _s = $RefreshSig$();\nimport \"./posts.scss\";\nimport { useState, useEffect } from \"react\";\nimport Post from \"../Post/Post\";\nimport user1 from \"../../assets/unrevealed-nft-3.jpg\";\nimport user2 from \"../../assets/unrevealed-nft-2.jpg\";\nimport defaultPic from \"../../assets/default-user.png\";\nimport AttachmentOutlinedIcon from \"@mui/icons-material/AttachmentOutlined\";\nimport CollectionsOutlinedIcon from \"@mui/icons-material/CollectionsOutlined\";\nimport EmojiEmotionsOutlinedIcon from \"@mui/icons-material/EmojiEmotionsOutlined\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({\n    body: \"\"\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3000/posts\").then(resp => resp.json()).then(posts => setPosts(posts));\n  }, []);\n  const handleInputChange = e => {\n    setNewPost(e.target.value);\n  };\n  const handleAddPost = e => {\n    e.preventDefault();\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPost)\n    };\n    fetch(\"http://localhost:3000/posts\", configObj).then(resp => resp.json()).then(post => setPosts([...posts, post]));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: defaultPic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items\",\n        children: [/*#__PURE__*/_jsxDEV(AttachmentOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CollectionsOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"YnEAH0nlrAbq0rLUGcHF0JUKdkQ=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","Post","user1","user2","defaultPic","AttachmentOutlinedIcon","CollectionsOutlinedIcon","EmojiEmotionsOutlinedIcon","Posts","posts","setPosts","newPost","setNewPost","body","fetch","then","resp","json","handleInputChange","e","target","value","handleAddPost","preventDefault","configObj","method","headers","JSON","stringify","post","map","id"],"sources":["/Users/bstignzales/Project-Phase-4/client/src/components/Posts/Posts.jsx"],"sourcesContent":["import \"./posts.scss\";\nimport { useState, useEffect } from \"react\";\nimport Post from \"../Post/Post\";\nimport user1 from \"../../assets/unrevealed-nft-3.jpg\";\nimport user2 from \"../../assets/unrevealed-nft-2.jpg\";\nimport defaultPic from \"../../assets/default-user.png\";\nimport AttachmentOutlinedIcon from \"@mui/icons-material/AttachmentOutlined\";\nimport CollectionsOutlinedIcon from \"@mui/icons-material/CollectionsOutlined\";\nimport EmojiEmotionsOutlinedIcon from \"@mui/icons-material/EmojiEmotionsOutlined\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({ body: \"\" });\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/posts\")\n      .then((resp) => resp.json())\n      .then((posts) => setPosts(posts));\n  }, []);\n\n  const handleInputChange = (e) => {\n    setNewPost(e.target.value);\n  };\n\n  const handleAddPost = (e) => {\n    e.preventDefault();\n    const configObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPost),\n    };\n    fetch(\"http://localhost:3000/posts\", configObj)\n      .then((resp) => resp.json())\n      .then((post) => setPosts([...posts, post]));\n  };\n\n  return (\n    <div className=\"posts\">\n      <div className=\"write\">\n        <img src={defaultPic} alt=\"\" />\n        <input\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          onChange={handleInputChange}\n        />\n        <div className=\"items\">\n          <AttachmentOutlinedIcon />\n          <EmojiEmotionsOutlinedIcon />\n          <CollectionsOutlinedIcon />\n        </div>\n        <button onClick={handleAddPost}>Post</button>\n      </div>\n      {posts.map((post) => (\n        <Post post={post} key={post.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,mCAAmC;AACrD,OAAOC,KAAK,MAAM,mCAAmC;AACrD,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,sBAAsB,MAAM,wCAAwC;AAC3E,OAAOC,uBAAuB,MAAM,yCAAyC;AAC7E,OAAOC,yBAAyB,MAAM,2CAA2C;AAAC;AAElF,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC;IAAEc,IAAI,EAAE;EAAG,CAAC,CAAC;EAEpDb,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEN,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/BP,UAAU,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,aAAa,GAAIH,CAAC,IAAK;IAC3BA,CAAC,CAACI,cAAc,EAAE;IAClB,MAAMC,SAAS,GAAG;MAChBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDb,IAAI,EAAEc,IAAI,CAACC,SAAS,CAACjB,OAAO;IAC9B,CAAC;IACDG,KAAK,CAAC,6BAA6B,EAAEU,SAAS,CAAC,CAC5CT,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEc,IAAI,IAAKnB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEoB,IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,wBACpB;MAAK,SAAS,EAAC,OAAO;MAAA,wBACpB;QAAK,GAAG,EAAEzB,UAAW;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/B;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,sBAAsB;QAClC,QAAQ,EAAEc;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC5B,eACF;QAAK,SAAS,EAAC,OAAO;QAAA,wBACpB,QAAC,sBAAsB;UAAA;UAAA;UAAA;QAAA,QAAG,eAC1B,QAAC,yBAAyB;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7B,QAAC,uBAAuB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACvB,eACN;QAAQ,OAAO,EAAEI,aAAc;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC,EACLb,KAAK,CAACqB,GAAG,CAAED,IAAI,iBACd,QAAC,IAAI;MAAC,IAAI,EAAEA;IAAK,GAAMA,IAAI,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QAC/B,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAjDIvB,KAAK;AAAA,KAALA,KAAK;AAmDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}